generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @default(cuid())
  name               String?
  email              String            @unique
  emailVerified      DateTime?
  image              String?
  imagePublicId      String?
  password           String?
  resetToken         String?           @unique
  resetTokenExpiry   DateTime?
  lastUsernameChange DateTime?
  bio                String?
  location           String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  accounts           Account[]
  expenses           Expense[]
  households         HouseholdMember[]
  sessions           Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Expense {
  id          String     @id @default(cuid())
  amount      Float
  description String
  date        DateTime
  category    String
  isRecurring Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      String
  householdId String?
  household   Household? @relation(fields: [householdId], references: [id])
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Household {
  id        String            @id @default(cuid())
  name      String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  expenses  Expense[]
  members   HouseholdMember[]
}

model HouseholdMember {
  userId      String
  householdId String
  role        String    @default("member")
  joinedAt    DateTime  @default(now())
  household   Household @relation(fields: [householdId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, householdId])
}
